using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using Fuzzware.Schemas.AutoGenerated;

namespace Fuzzware.Fuzzsaw.Common.ViewModel
{
    public class FileStoreControlViewModel : DirectoryControlViewModel
    {
        #region Dependency Properties
        public static readonly DependencyProperty FileExtensionProperty = DependencyProperty.Register("FileExtension", typeof(string), typeof(FileStoreControlViewModel));
        /// <summary>
        /// The File extension to use when storing files.
        /// </summary>
        public string FileExtension
        {
            get { return (string)GetValue(FileExtensionProperty); }
            set { SetValue(FileExtensionProperty, value); }
        }

        public static readonly DependencyProperty ToleranceProperty = DependencyProperty.Register("Tolerance", typeof(string), typeof(FileStoreControlViewModel));
        /// <summary>
        /// The tolerance to use when deciding to store a file.
        /// </summary>
        public string Tolerance
        {
            get { return (string)GetValue(ToleranceProperty); }
            set { SetValue(ToleranceProperty, value); }
        }
        #endregion

        public void SetFileStore(FileStore oFileStore)
        {
            DirectoryName = oFileStore.Directory;
            FileExtension = oFileStore.FileExtension;
        }

        public void SetFileStoreWithTolerance(FileStoreWithTolerance oFileStoreWithTolerance)
        {
            DirectoryName = oFileStoreWithTolerance.Directory;
            FileExtension = oFileStoreWithTolerance.FileExtension;
            Tolerance = oFileStoreWithTolerance.Tolerance;
        }

        public FileStore GetFileStore()
        {
            FileStore oFileStore = new FileStore();
            oFileStore.Directory = DirectoryName;
            oFileStore.FileExtension = FileExtension;
            return oFileStore;
        }

        public FileStoreWithTolerance GetFileStoreWithTolerance()
        {
            FileStoreWithTolerance oFileStoreWithTolerance = new FileStoreWithTolerance();
            oFileStoreWithTolerance.Directory = DirectoryName;
            oFileStoreWithTolerance.FileExtension = FileExtension;
            oFileStoreWithTolerance.Tolerance = Tolerance;
            return oFileStoreWithTolerance;
        }
    }
}
