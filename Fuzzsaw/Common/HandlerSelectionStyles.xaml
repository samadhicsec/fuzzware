<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cmn="clr-namespace:Fuzzware.Fuzzsaw.Common">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="HandlerDescriptionText" BasedOn="{StaticResource CommonText}" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="HandlerOptionGroupStyle" TargetType="HeaderedContentControl">

        <Setter Property="cmn:Common.IsExpanded" Value="false" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <Grid Margin="4,4">
                        <Grid.ColumnDefinitions>
                            <!-- Width="*" ensures the TreeViewItem takes up the entire width of the parent -->
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border Name="Bd"
                          Background="{StaticResource BackgroundBrush}"
                          BorderBrush="{StaticResource CommonFontColour}" 
                          BorderThickness="0.6" CornerRadius="8" Padding="0" SnapsToDevicePixels="True">
                            <Grid ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <Expander Name="Exp" IsExpanded="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(cmn:Common.IsExpanded), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <Expander.Header>
                                        <!-- Displays the header in the Expander. -->
                                        <ContentPresenter ContentSource="Header" />
                                    </Expander.Header>
                                    <!-- Displays the content. -->
                                    <ContentPresenter ContentSource="Content" />
                                </Expander>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="HandlerOptionDescStyle" TargetType="HeaderedContentControl">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <StackPanel>
                        <TextBlock Style="{StaticResource CommonHeaderText}" Text="{TemplateBinding Header}" />
                        <Separator Background="{StaticResource CommonFontColour}" />
                        <TextBlock Style="{StaticResource HandlerDescriptionText}" Text="{TemplateBinding Content}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="HandlerOptionStyle" TargetType="Button">

        <Setter Property="cmn:Common.IsSelected" Value="false" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Style="{StaticResource SelectableBorderStyle}"
                        cmn:Common.IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(cmn:Common.IsSelected)}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="HandlerOptionGroupHeaderStyle" TargetType="HeaderedContentControl">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <StackPanel>
                        <TextBlock Style="{StaticResource CommonHeaderText}" Text="{TemplateBinding Header}" />
                        <TextBlock Style="{StaticResource HandlerDescriptionText}" Text="{TemplateBinding Content}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>



    <!-- Defines the ControlTemplate used by the NavPane and a different ItemsPanel for child items. -->
    <!--<Style x:Key="InputSelectionStyle" TargetType="TreeViewItem">
        <Style.Resources>
            <LinearGradientBrush x:Key="ItemAreaBrush" StartPoint="0.5, 0" EndPoint="0.5, 1" Opacity="0.3">
                <GradientStop Color="Black" Offset="0" />
                <GradientStop Color="White" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="SelectedItemAreaBrush" StartPoint="0.5, 0" EndPoint="0.5, 1" Opacity="0.4">
                <GradientStop Color="#22000000" Offset="0" />
                <GradientStop Color="#EEFFFFFF" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ItemBorderBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                <GradientStop Color="LightGray" Offset="0" />
                <GradientStop Color="Gray" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="SelectedItemBorderBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                <GradientStop Color="Gray" Offset="0" />
                <GradientStop Color="LightGray" Offset="1" />
            </LinearGradientBrush>
            <DropShadowBitmapEffect x:Key="DropShadowEffect" />
        </Style.Resources>

        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid Margin="4,4">
                        <Grid.ColumnDefinitions>
                            -->
                            <!-- Width="*" ensures the TreeViewItem takes up the entire width of the parent -->
                            <!--
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        -->
                        <!-- This Border contains elements which display the content and child items of the TreeViewItem. -->
                        <!--
                        <Border Name="Bd"
                          Background="{StaticResource ItemAreaBrush}"
                          BorderBrush="{StaticResource ItemBorderBrush}" 
                          BorderThickness="0.6" CornerRadius="8" Padding="0" SnapsToDevicePixels="True">
                            <Grid ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                -->
                                <!-- Items with children are shown in an Expander. -->
                                <!--
                                <Expander Name="Exp" IsExpanded="{TemplateBinding TreeViewItem.IsExpanded}">
                                    <Expander.Header>
                                        -->
                                        <!-- Displays the item's header in the Expander. -->
                                        <!--
                                        <ContentPresenter ContentSource="Header" />
                                    </Expander.Header>
                                    -->
                                    <!-- Displays the item's children. -->
                                    <!--
                                    <ItemsPresenter />
                                </Expander>
                                -->
                                <!-- Items without children are shown in a ContentPresenter. -->
                                <!--
                                <ContentPresenter Name="CntPres" ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                  Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        -->
                        <!-- If the TreeViewItem has child items, show it in an Expander.  Otherwise hide the Expander and show the hidden
                            ContentPresenter. -->
                        <!--
                        <Trigger Property="TreeViewItem.HasItems" Value="false">
                            <Setter TargetName="Exp" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CntPres" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Bd" Property="Panel.Background" Value="Transparent" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="Transparent" />
                        </Trigger>
                        -->
                        <!--When the item is selected in the TreeView, use the "selected" colors and give it a drop shadow. -->
                        <!--
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{StaticResource SelectedItemAreaBrush}" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource SelectedItemBorderBrush}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                                                
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->
    
    
</ResourceDictionary>