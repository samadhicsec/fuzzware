using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Fuzzware.Schemas.AutoGenerated;

namespace Fuzzware.Fuzzsaw.Common.Controls
{
    /// <summary>
    /// Interaction logic for FileStoreWithToleranceControl.xaml
    /// </summary>
    public partial class FileStoreWithToleranceControl : UserControl
    {
        #region Dependency Properties declaration and setup

        static readonly DependencyProperty FileStoreWithToleranceProperty = DependencyProperty.Register("FileStoreWithTolerance", typeof(FileStoreWithTolerance), typeof(FileStoreWithToleranceControl));
        public FileStoreWithTolerance FileStoreWithTolerance
        {
            get 
            { 
                FileStoreWithTolerance oFSWT = (FileStoreWithTolerance)GetValue(FileStoreWithToleranceProperty);
                if (null != oFSWT)
                {
                    oFSWT.Directory = ucFileStoreControl.FileStore.Directory;
                    oFSWT.FileExtension = ucFileStoreControl.FileStore.FileExtension;
                }
                return oFSWT; 
            }
            set 
            { 
                SetValue(FileStoreWithToleranceProperty, value);
                ucFileStoreControl.FileStore.Directory = value.Directory;
                ucFileStoreControl.FileStore.FileExtension = value.FileExtension;
            }
        }

        static readonly DependencyProperty DescriptionProperty = DependencyProperty.Register("Description", typeof(String), typeof(FileStoreWithToleranceControl));
        public String Description
        {
            get { return (String)GetValue(DescriptionProperty); }
            set { SetValue(DescriptionProperty, value); }
        }

        #endregion

        public FileStoreWithToleranceControl()
        {
            InitializeComponent();

            FileStoreWithTolerance = new FileStoreWithTolerance();
            FileStoreWithTolerance.Directory = ucFileStoreControl.FileStore.Directory;
            FileStoreWithTolerance.FileExtension = ucFileStoreControl.FileStore.FileExtension;
        }
    }
}
