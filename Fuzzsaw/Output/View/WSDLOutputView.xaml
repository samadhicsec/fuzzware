<UserControl x:Class="Fuzzware.Fuzzsaw.Output.View.WSDLOutputView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cv="clr-namespace:Fuzzware.Fuzzsaw.Common.View"
    xmlns:cmn="clr-namespace:Fuzzware.Fuzzsaw.Common"
    xmlns:local="clr-namespace:Fuzzware.Fuzzsaw.Output.View"
    >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\..\Common\Common.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="GenericAdornableReuseParameters">
                <Setter Property="Control.HorizontalAlignment" Value="Left"  />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type cmn:GenericAdornable}">
                            <TextBlock x:Name="PART_UIElementPart" 
                                VerticalAlignment="Center"
                                Text="{Binding Path=Value,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                MinWidth="{Binding Path=MinWidth,RelativeSource={RelativeSource TemplatedParent}}"
                                MaxWidth="{Binding Path=MaxWidth,RelativeSource={RelativeSource TemplatedParent}}"
                                Width="{Binding Path=Width,RelativeSource={RelativeSource TemplatedParent}}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="GenericAdornerTextBox" TargetType="TextBox">

                <Setter Property="Control.HorizontalAlignment" Value="Stretch" />
                <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cmn:GenericAdorner.ProxyProperty), 
                                        Mode=TwoWay}" />
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.Visibility>
        <Binding Path="Show" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource BooleanToVisability}" />
    </UserControl.Visibility>
    
    <Grid>
        <!--<Grid.RowDefinitions>
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="10" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="10" />
        </Grid.ColumnDefinitions>-->

        <ScrollViewer Grid.Column="1" Grid.Row="1">
            <Border Style="{StaticResource BorderStyle}">
                <HeaderedContentControl Style="{StaticResource HeaderedContentControlStyle}" Header="Send testcases to Web Services">
                    <StackPanel>
                        <HeaderedContentControl Style="{StaticResource SubHeaderedContentControlStyle}" Header="Template">
                            <StackPanel>
                                <TextBlock Margin="5,5,5,0" Style="{StaticResource CommonText}">
                                Choose a template for the SOAP request
                            </TextBlock>
                                <cv:FileControlView DataContext="{Binding Path=SOAPTemplate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Margin="5,0,0,5" Style="{StaticResource HelpText}" TextWrapping="Wrap">
                                This SOAP XML template should contain the default SOAP Header and Body to use for each request.  
                                If a custom SOAP Header is required make a copy of the default template and edit as appropriate.
                            </TextBlock>
                            </StackPanel>
                        </HeaderedContentControl>

                        <HeaderedContentControl Style="{StaticResource SubHeaderedContentControlStyle}" Header="Reuse Response Values">
                            <StackPanel>
                                <TextBlock Style="{StaticResource CommonText}" Margin="5" TextWrapping="Wrap">
                                    Often Web Service method request requires part of the response to a previous Web Service method request.  
                                    By adding to the list below the name of an XML node that appears in a reponse, Fuzzware will reuse the
                                    response value in future method requests.  The node name should not include a prefix and can contain
                                    child nodes or just a value.
                                </TextBlock>
                                <Grid Margin="10" HorizontalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <ListBox Name="lbReuseParameters" MinWidth="390" Grid.Column="0" Grid.Row="0" Style="{StaticResource DataText}"
                                        ItemsSource="{Binding Path=ReuseParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        KeyDown="lbReuseParameters_KeyDown"
                                        SelectionMode="Extended" KeyboardNavigation.DirectionalNavigation="Contained"
                                        BorderBrush="{StaticResource CommonFontColour}"
                                        local:WSDLOutputView.DeleteReuseParameter="{Binding Path=DeleteReuseParameterCommand}"
                                        GotFocus="lbReuseParameters_GotFocus"
                                        LostFocus="lbReuseParameters_LostFocus">
                                        <ListBox.Resources>
                                            <!--Data Context will be set in code to lbReuseParameters-->
                                            <MenuItem x:Key="EditMenuResource" Header="Edit">
                                                <MenuItem Header="Delete" InputGestureText="Del" Command="{Binding Path=DataContext.DeleteReuseParameterCommand}" CommandParameter="{Binding Path=SelectedItem}" />
                                            </MenuItem>
                                        </ListBox.Resources>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <cmn:GenericAdornable Height="25" Value="{Binding Path=Value, Mode=TwoWay}" 
                                                    AdornerContentControlStyle="{StaticResource GenericAdornerTextBox}" 
                                                    AdornerFrwkElementType="{x:Type TextBox}"
                                                    StartedEditting="{Binding ElementName=lbReuseParameters, Path=DataContext.PreEditDataCommand}"
                                                    StartedEdittingParameter="{Binding}"
                                                    FinishedEditting="{Binding ElementName=lbReuseParameters, Path=DataContext.AddReuseParameterCommand}"
                                                    MinWidth="370" Style="{StaticResource GenericAdornableReuseParameters}" />
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                            </StackPanel>
                        </HeaderedContentControl>

                        <HeaderedContentControl Style="{StaticResource SubHeaderedContentControlStyle}" Header="Output">
                            <StackPanel>
                                <cv:AdvancedFileStoreControlView Description="Choose an output directory and file extension for storing unique responses"
                                    DataContext="{Binding Path=FileStore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                        </HeaderedContentControl>
                    </StackPanel>
                </HeaderedContentControl>
            </Border>
        </ScrollViewer>
    </Grid>

</UserControl>
