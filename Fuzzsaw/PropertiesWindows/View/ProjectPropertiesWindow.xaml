<Window x:Class="Fuzzware.Fuzzsaw.PropertiesWindows.View.ProjectPropertiesWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cv="clr-namespace:Fuzzware.Fuzzsaw.Common.View"
    Title="Project Properties" Height="500" Width="450" ResizeMode="NoResize" ShowInTaskbar="False" WindowStartupLocation="CenterOwner"
    >
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\..\Common\Common.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0">
            <TabItem Header="Output Format" Style="{StaticResource CommonText}" IsSelected="True">
                <StackPanel>
                    <TextBlock Style="{StaticResource HelpText}" TextWrapping="Wrap">
                        These output format options specify the default output encoding (for non-binary data) and various XML specific options.
                    </TextBlock>
                    <Grid Margin="10,10,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Margin="5,0,5,0" Style="{StaticResource CommonText}" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0">
                            Output Encoding
                        </TextBlock>
                        <TextBox Style="{StaticResource DataText}" Width="150" HorizontalAlignment="Left" VerticalContentAlignment="Center"
                                 Grid.Column="1" Grid.Row="0" Text="{Binding Path=OutputEncoding, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        <TextBlock Style="{StaticResource HelpText}" Grid.Column="1" Grid.Row="1">
                            E.g. us-ascii, utf-8, utf-7, utf-16
                        </TextBlock>
                    </Grid>
                    <CheckBox Margin="10,3,3,3" Style="{StaticResource CommonText}"
                              IsChecked="{Binding Path=OmitXmlDeclaration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        Don't output XML declaration
                    </CheckBox>
                    <CheckBox Margin="10,3,3,3" Style="{StaticResource CommonText}"
                              IsChecked="{Binding Path=OmitXmlComments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        Don't output XML comments
                    </CheckBox>
                    <CheckBox Margin="10,3,3,3" Style="{StaticResource CommonText}"
                              IsChecked="{Binding Path=FormatXML, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        Format XML with line breaks and indentation
                    </CheckBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="Pre-Output User Code" Style="{StaticResource CommonText}" IsSelected="False">
                <StackPanel>
                    <TextBlock Style="{StaticResource HelpText}" TextWrapping="Wrap">
                        When custom code is required to format the output, but not to send to the output destination, specify the custom code
                        here and it will be passed each testcase before the output destination method is invoked.
                    </TextBlock>
                    <cv:UserDefinedCodeControlView InterfaceName="Extensible.IUserPreOutputhandler"
                        DataContext="{Binding Path=PreOutputUserCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></cv:UserDefinedCodeControlView>
                </StackPanel>
            </TabItem>
            <!--<TabItem Header="Logs" Style="{StaticResource CommonText}" IsSelected="False">
                <StackPanel>
                    <TextBlock Margin="5,0,0,0" Style="{StaticResource CommonText}" TextWrapping="Wrap">
                        Log Directory
                    </TextBlock>
                    <TextBlock Margin="5,0,0,0" Style="{StaticResource HelpText}" TextWrapping="Wrap">
                        Specify a path to store log files, it can be relative or absolute.
                    </TextBlock>
                    <TextBox Margin="5" Style="{StaticResource CommonText}" Text="{Binding Path=LogDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </TabItem>-->
        </TabControl>
        <StackPanel Grid.Row="1" Margin="5" Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button Width="60" Height="25" Style="{StaticResource CommonText}" Click="Cancel">Cancel</Button>
            <Button Width="60" Height="25" Style="{StaticResource CommonText}" Click="OK">OK</Button>
        </StackPanel>
    </Grid>
    
</Window>
