using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Fuzzware.Schemer.AutoGenerated;

namespace Fuzzware.Fuzzsaw.FuzzingConfig
{
    public class StringValueFuzzingConfig : BaseFuzzingConfig
    {

        public StringValueFuzzingConfig(SimpleTypeFuzzerConfig Config)
        {
            oConfig = Config;
            oAvailableFuzzers = new List<string>();
            oAvailableFuzzers.Add("InsertString");
            oAvailableFuzzers.Add("ReplaceString");
            oAvailableFuzzers.Add("EncodeString");

            ValueRangesList = new List<ValueRange>();

            if (null != oConfig.StringValueFuzzer)
            {
                if (null != oConfig.StringValueFuzzer.DefaultFuzzers)
                {
                    bDefaultFuzzerToAdd = true;
                    DefaultFuzzersType = oConfig.StringValueFuzzer.DefaultFuzzers.GetType();
                    DefaultFuzzersObj = oConfig.StringValueFuzzer.DefaultFuzzers;
                }
                if (null != oConfig.StringValueFuzzer.CustomFuzzer)
                {
                    bCustomFuzzersToAdd = true;
                    CustomFuzzersTypes = new Type[oConfig.StringValueFuzzer.CustomFuzzer.Length];
                    CustomFuzzersObjs = new object[oConfig.StringValueFuzzer.CustomFuzzer.Length];
                    for (int i = 0; i < oConfig.StringValueFuzzer.CustomFuzzer.Length; i++)
                    {
                        CustomFuzzersTypes[i] = oConfig.StringValueFuzzer.CustomFuzzer[i].GetType();
                        CustomFuzzersObjs[i] = oConfig.StringValueFuzzer.CustomFuzzer[i];
                    }
                }

                if (null != oConfig.StringValueFuzzer.StringRange)
                    ValueRangesList.AddRange(oConfig.StringValueFuzzer.StringRange);
            }

            CreateNodesAndFuzzersList();
            CreateValueGroups();
        }

        protected override Type GetFuzzerType()
        {
            return typeof(StringValueFuzzersType);
        }

        protected override void CreateValueGroups()
        {
            ValueGroupsList = new List<ValueGroup>();
            if ((null != oConfig.StringValueFuzzer) && (null != oConfig.StringValueFuzzer.StringGroup))
            {
                for (int i = 0; i < oConfig.StringValueFuzzer.StringGroup.Length; i++)
                {
                    StringValueFuzzerStringGroup grp = oConfig.StringValueFuzzer.StringGroup[i];
                    ValueGroup oValueGroups = new ValueGroup(grp.ID);
                    // Copy values to a string array
                    oValueGroups.ValuesObj.AddRange(grp.StringValue);
                    ValueGroupsList.Add(oValueGroups);
                }
            }
        }

        public StringValueFuzzer Serialise()
        {
            StringValueFuzzer oStringValueFuzzer = new StringValueFuzzer();
            oStringValueFuzzer.CustomFuzzer = new StringValueFuzzerCustomFuzzer[NodeFuzzersList.Count];
            int iCustomIndex = 0;
            for (int i = 0; i < NodeFuzzersList.Count; i++)
            {
                if (NodeFuzzersList[i].ToString().Equals("Default", StringComparison.CurrentCultureIgnoreCase))
                {
                    oStringValueFuzzer.DefaultFuzzers = new StringValueFuzzersType();
                    NodeFuzzersList[i].Serialise(oStringValueFuzzer.DefaultFuzzers.GetType(), oStringValueFuzzer.DefaultFuzzers);
                    // Remove the last custom fuzzer as we assigned one too many
                    StringValueFuzzerCustomFuzzer[] array = oStringValueFuzzer.CustomFuzzer;
                    Array.Resize<StringValueFuzzerCustomFuzzer>(ref array, array.Length - 1);
                    oStringValueFuzzer.CustomFuzzer = array;
                }
                else
                {
                    StringValueFuzzerCustomFuzzer oCustom = new StringValueFuzzerCustomFuzzer();
                    NodeFuzzersList[i].Serialise(oCustom.GetType(), oCustom);
                    oStringValueFuzzer.CustomFuzzer[iCustomIndex++] = oCustom;
                }
            }

            oStringValueFuzzer.StringGroup = new StringValueFuzzerStringGroup[ValueGroupsList.Count];
            for (int i = 0; i < ValueGroupsList.Count; i++)
            {
                oStringValueFuzzer.StringGroup[i] = new StringValueFuzzerStringGroup();
                oStringValueFuzzer.StringGroup[i].ID = ValueGroupsList[i].ToString();
                oStringValueFuzzer.StringGroup[i].StringValue = ValueGroupsList[i].Values;
            }

            oStringValueFuzzer.StringRange = ValueRangesList.ToArray();

            return oStringValueFuzzer;
        }
    }
}
