using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Windows;
using Fuzzware.Fuzzsaw.Common;
using Fuzzware.Schemer.AutoGenerated;

namespace Fuzzware.Fuzzsaw.FuzzingConfig
{
    public class OrderFuzzerView : BaseFuzzerView
    {
        #region Bindable Objects Setup
        public static DependencyProperty OrderCountProperty;

        static OrderFuzzerView()
        {
            OrderCountProperty = DependencyProperty.Register("OrderCount", typeof(ObservableString), typeof(OrderFuzzerView));
        }

        public ObservableString OrderCount
        {
            get { return (ObservableString)GetValue(OrderCountProperty); }
            set { SetValue(OrderCountProperty, value); }
        }

        #endregion

        public OrderFuzzerView(uint OrderFuzzingCount, bool OrderFuzzingOn)
        {
            OrderCount = new ObservableString("");
            if (OrderFuzzingOn)
                OrderCount.Value = OrderFuzzingCount.ToString();
        }

        /// <summary>
        /// The save the Occurrence Fuzzer view to its original data source
        /// </summary>
        public void SaveOrderFuzzerView(ComplexTypeFuzzerConfig oCTFC)
        {
            oCTFC.OrderFuzzingCountSpecified = false;
            if (!String.IsNullOrEmpty(OrderCount.Value))
            {
                uint val = 0;
                if (UInt32.TryParse(OrderCount.Value, out val))
                {
                    oCTFC.OrderFuzzingCount = val;
                    oCTFC.OrderFuzzingCountSpecified = true;
                }
            }
        }
    }
}
